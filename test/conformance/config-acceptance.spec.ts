/* eslint-disable @typescript-eslint/await-thenable */
import {Config, } from '../../src/Config'
import {enGB} from '../../src/i18n'
import { DateHelper, SimpleDate } from '../../src/DateHelper'
import moment from 'moment'
import { Maybe } from '../../src/Maybe'

describe('Config', () => {
  it('has default settings', () => {
    const config = new Config({language: enGB})
    expect(config.getConfig().accentSensitive).toBe(Config.defaultConfig.accentSensitive)
    expect(config.getConfig().caseSensitive).toBe(Config.defaultConfig.caseSensitive)
    expect(config.getConfig().caseFirst).toBe(Config.defaultConfig.caseFirst)
    expect(config.getConfig().chooseAddressMappingPolicy).toBe(Config.defaultConfig.chooseAddressMappingPolicy)
    expect(config.getConfig().dateFormats).toBe(Config.defaultConfig.dateFormats)
    expect(config.getConfig().functionArgSeparator).toBe(Config.defaultConfig.functionArgSeparator)
    expect(config.getConfig().decimalSeparator).toBe(Config.defaultConfig.decimalSeparator)
    expect(config.getConfig().thousandSeparator).toBe(Config.defaultConfig.thousandSeparator)
    expect(config.getConfig().language).toBe(Config.defaultConfig.language)
    expect(config.getConfig().functionPlugins).toBe(Config.defaultConfig.functionPlugins)
    expect(config.getConfig().gpuMode).toBe(Config.defaultConfig.gpuMode)
    expect(config.getConfig().ignorePunctuation).toBe(Config.defaultConfig.ignorePunctuation)
    expect(config.getConfig().leapYear1900).toBe(Config.defaultConfig.leapYear1900)
    expect(config.getConfig().localeLang).toBe(Config.defaultConfig.localeLang)
    expect(config.getConfig().smartRounding).toBe(Config.defaultConfig.smartRounding)
    expect(config.getConfig().matrixDetection).toBe(Config.defaultConfig.matrixDetection)
    expect(config.getConfig().matrixDetectionThreshold).toBe(Config.defaultConfig.matrixDetectionThreshold)
    expect(config.getConfig().nullYear).toBe(Config.defaultConfig.nullYear)
    expect(config.getConfig().parseDate).toBe(Config.defaultConfig.parseDate)
    expect(config.getConfig().stringifyDate).toBe(Config.defaultConfig.stringifyDate)
    expect(config.getConfig().precisionEpsilon).toBe(Config.defaultConfig.precisionEpsilon)
    expect(config.getConfig().precisionRounding).toBe(Config.defaultConfig.precisionRounding)
    expect(config.getConfig().useColumnIndex).toBe(Config.defaultConfig.useColumnIndex)
    expect(config.getConfig().vlookupThreshold).toBe(Config.defaultConfig.vlookupThreshold)
    expect(config.getConfig().nullDate).toBe(Config.defaultConfig.nullDate)
    expect(config.getConfig().useStats).toBe(Config.defaultConfig.useStats)
  })

  it('has default settings and the accent sensitive change is possible', () => {
    const config = new Config({accentSensitive: true })
    expect(config.getConfig().accentSensitive).toBe(true)
    expect(config.getConfig().caseSensitive).toBe(Config.defaultConfig.caseSensitive)
    expect(config.getConfig().caseFirst).toBe(Config.defaultConfig.caseFirst)
    expect(config.getConfig().chooseAddressMappingPolicy).toBe(Config.defaultConfig.chooseAddressMappingPolicy)
    expect(config.getConfig().dateFormats).toBe(Config.defaultConfig.dateFormats)
    expect(config.getConfig().functionArgSeparator).toBe(Config.defaultConfig.functionArgSeparator)
    expect(config.getConfig().decimalSeparator).toBe(Config.defaultConfig.decimalSeparator)
    expect(config.getConfig().thousandSeparator).toBe(Config.defaultConfig.thousandSeparator)
    expect(config.getConfig().language).toBe(Config.defaultConfig.language)
    expect(config.getConfig().functionPlugins).toBe(Config.defaultConfig.functionPlugins)
    expect(config.getConfig().gpuMode).toBe(Config.defaultConfig.gpuMode)
    expect(config.getConfig().ignorePunctuation).toBe(Config.defaultConfig.ignorePunctuation)
    expect(config.getConfig().leapYear1900).toBe(Config.defaultConfig.leapYear1900)
    expect(config.getConfig().localeLang).toBe(Config.defaultConfig.localeLang)
    expect(config.getConfig().smartRounding).toBe(Config.defaultConfig.smartRounding)
    expect(config.getConfig().matrixDetection).toBe(Config.defaultConfig.matrixDetection)
    expect(config.getConfig().matrixDetectionThreshold).toBe(Config.defaultConfig.matrixDetectionThreshold)
    expect(config.getConfig().nullYear).toBe(Config.defaultConfig.nullYear)
    expect(config.getConfig().parseDate).toBe(Config.defaultConfig.parseDate)
    expect(config.getConfig().stringifyDate).toBe(Config.defaultConfig.stringifyDate)
    expect(config.getConfig().precisionEpsilon).toBe(Config.defaultConfig.precisionEpsilon)
    expect(config.getConfig().precisionRounding).toBe(Config.defaultConfig.precisionRounding)
    expect(config.getConfig().useColumnIndex).toBe(Config.defaultConfig.useColumnIndex)
    expect(config.getConfig().vlookupThreshold).toBe(Config.defaultConfig.vlookupThreshold)
    expect(config.getConfig().nullDate).toBe(Config.defaultConfig.nullDate)
    expect(config.getConfig().useStats).toBe(Config.defaultConfig.useStats)
  })

  it('has default settings and the case sensitive change is possible', () => {
    const config = new Config({caseSensitive: true})
    expect(config.getConfig().accentSensitive).toBe(Config.defaultConfig.accentSensitive)
    expect(config.getConfig().caseSensitive).toBe(true)
    expect(config.getConfig().caseFirst).toBe(Config.defaultConfig.caseFirst)
    expect(config.getConfig().chooseAddressMappingPolicy).toBe(Config.defaultConfig.chooseAddressMappingPolicy)
    expect(config.getConfig().dateFormats).toBe(Config.defaultConfig.dateFormats)
    expect(config.getConfig().functionArgSeparator).toBe(Config.defaultConfig.functionArgSeparator)
    expect(config.getConfig().decimalSeparator).toBe(Config.defaultConfig.decimalSeparator)
    expect(config.getConfig().thousandSeparator).toBe(Config.defaultConfig.thousandSeparator)
    expect(config.getConfig().language).toBe(Config.defaultConfig.language)
    expect(config.getConfig().functionPlugins).toBe(Config.defaultConfig.functionPlugins)
    expect(config.getConfig().gpuMode).toBe(Config.defaultConfig.gpuMode)
    expect(config.getConfig().ignorePunctuation).toBe(Config.defaultConfig.ignorePunctuation)
    expect(config.getConfig().leapYear1900).toBe(Config.defaultConfig.leapYear1900)
    expect(config.getConfig().localeLang).toBe(Config.defaultConfig.localeLang)
    expect(config.getConfig().smartRounding).toBe(Config.defaultConfig.smartRounding)
    expect(config.getConfig().matrixDetection).toBe(Config.defaultConfig.matrixDetection)
    expect(config.getConfig().matrixDetectionThreshold).toBe(Config.defaultConfig.matrixDetectionThreshold)
    expect(config.getConfig().nullYear).toBe(Config.defaultConfig.nullYear)
    expect(config.getConfig().parseDate).toBe(Config.defaultConfig.parseDate)
    expect(config.getConfig().stringifyDate).toBe(Config.defaultConfig.stringifyDate)
    expect(config.getConfig().precisionEpsilon).toBe(Config.defaultConfig.precisionEpsilon)
    expect(config.getConfig().precisionRounding).toBe(Config.defaultConfig.precisionRounding)
    expect(config.getConfig().useColumnIndex).toBe(Config.defaultConfig.useColumnIndex)
    expect(config.getConfig().vlookupThreshold).toBe(Config.defaultConfig.vlookupThreshold)
    expect(config.getConfig().nullDate).toBe(Config.defaultConfig.nullDate)
    expect(config.getConfig().useStats).toBe(Config.defaultConfig.useStats)
  })

  it('has default settings and the case first change is possible', () => {
    const config = new Config({caseFirst: 'upper'})
    expect(config.getConfig().accentSensitive).toBe(Config.defaultConfig.accentSensitive)
    expect(config.getConfig().caseSensitive).toBe(Config.defaultConfig.caseSensitive)
    expect(config.getConfig().caseFirst).toBe('upper')
    expect(config.getConfig().chooseAddressMappingPolicy).toBe(Config.defaultConfig.chooseAddressMappingPolicy)
    expect(config.getConfig().dateFormats).toBe(Config.defaultConfig.dateFormats)
    expect(config.getConfig().functionArgSeparator).toBe(Config.defaultConfig.functionArgSeparator)
    expect(config.getConfig().decimalSeparator).toBe(Config.defaultConfig.decimalSeparator)
    expect(config.getConfig().thousandSeparator).toBe(Config.defaultConfig.thousandSeparator)
    expect(config.getConfig().language).toBe(Config.defaultConfig.language)
    expect(config.getConfig().functionPlugins).toBe(Config.defaultConfig.functionPlugins)
    expect(config.getConfig().gpuMode).toBe(Config.defaultConfig.gpuMode)
    expect(config.getConfig().ignorePunctuation).toBe(Config.defaultConfig.ignorePunctuation)
    expect(config.getConfig().leapYear1900).toBe(Config.defaultConfig.leapYear1900)
    expect(config.getConfig().localeLang).toBe(Config.defaultConfig.localeLang)
    expect(config.getConfig().smartRounding).toBe(Config.defaultConfig.smartRounding)
    expect(config.getConfig().matrixDetection).toBe(Config.defaultConfig.matrixDetection)
    expect(config.getConfig().matrixDetectionThreshold).toBe(Config.defaultConfig.matrixDetectionThreshold)
    expect(config.getConfig().nullYear).toBe(Config.defaultConfig.nullYear)
    expect(config.getConfig().parseDate).toBe(Config.defaultConfig.parseDate)
    expect(config.getConfig().stringifyDate).toBe(Config.defaultConfig.stringifyDate)
    expect(config.getConfig().precisionEpsilon).toBe(Config.defaultConfig.precisionEpsilon)
    expect(config.getConfig().precisionRounding).toBe(Config.defaultConfig.precisionRounding)
    expect(config.getConfig().useColumnIndex).toBe(Config.defaultConfig.useColumnIndex)
    expect(config.getConfig().vlookupThreshold).toBe(Config.defaultConfig.vlookupThreshold)
    expect(config.getConfig().nullDate).toBe(Config.defaultConfig.nullDate)
    expect(config.getConfig().useStats).toBe(Config.defaultConfig.useStats)
  })
      
  it('has default settings and change of functionArgSeparator is possible', () => {
    const config = new Config({functionArgSeparator: ';'})
    expect(config.getConfig().accentSensitive).toBe(Config.defaultConfig.accentSensitive)
    expect(config.getConfig().caseSensitive).toBe(Config.defaultConfig.caseSensitive)
    expect(config.getConfig().caseFirst).toBe(Config.defaultConfig.caseFirst)
    expect(config.getConfig().chooseAddressMappingPolicy).toBe(Config.defaultConfig.chooseAddressMappingPolicy)
    expect(config.getConfig().dateFormats).toBe(Config.defaultConfig.dateFormats)
    expect(config.getConfig().functionArgSeparator).toBe(';')
    expect(config.getConfig().decimalSeparator).toBe(Config.defaultConfig.decimalSeparator)
    expect(config.getConfig().thousandSeparator).toBe(Config.defaultConfig.thousandSeparator)
    expect(config.getConfig().language).toBe(Config.defaultConfig.language)
    expect(config.getConfig().functionPlugins).toBe(Config.defaultConfig.functionPlugins)
    expect(config.getConfig().gpuMode).toBe(Config.defaultConfig.gpuMode)
    expect(config.getConfig().ignorePunctuation).toBe(Config.defaultConfig.ignorePunctuation)
    expect(config.getConfig().leapYear1900).toBe(Config.defaultConfig.leapYear1900)
    expect(config.getConfig().localeLang).toBe(Config.defaultConfig.localeLang)
    expect(config.getConfig().smartRounding).toBe(Config.defaultConfig.smartRounding)
    expect(config.getConfig().matrixDetection).toBe(Config.defaultConfig.matrixDetection)
    expect(config.getConfig().matrixDetectionThreshold).toBe(Config.defaultConfig.matrixDetectionThreshold)
    expect(config.getConfig().nullYear).toBe(Config.defaultConfig.nullYear)
    expect(config.getConfig().parseDate).toBe(Config.defaultConfig.parseDate)
    expect(config.getConfig().stringifyDate).toBe(Config.defaultConfig.stringifyDate)
    expect(config.getConfig().precisionEpsilon).toBe(Config.defaultConfig.precisionEpsilon)
    expect(config.getConfig().precisionRounding).toBe(Config.defaultConfig.precisionRounding)
    expect(config.getConfig().useColumnIndex).toBe(Config.defaultConfig.useColumnIndex)
    expect(config.getConfig().vlookupThreshold).toBe(Config.defaultConfig.vlookupThreshold)
    expect(config.getConfig().nullDate).toBe(Config.defaultConfig.nullDate)
    expect(config.getConfig().useStats).toBe(Config.defaultConfig.useStats)
  })

  it('has default settings and change of gpu Mode is possible', () => {
    const config = new Config({gpuMode: 'cpu'})
    expect(config.getConfig().accentSensitive).toBe(Config.defaultConfig.accentSensitive)
    expect(config.getConfig().caseSensitive).toBe(Config.defaultConfig.caseSensitive)
    expect(config.getConfig().caseFirst).toBe(Config.defaultConfig.caseFirst)
    expect(config.getConfig().chooseAddressMappingPolicy).toBe(Config.defaultConfig.chooseAddressMappingPolicy)
    expect(config.getConfig().dateFormats).toBe(Config.defaultConfig.dateFormats)
    expect(config.getConfig().functionArgSeparator).toBe(Config.defaultConfig.functionArgSeparator)
    expect(config.getConfig().decimalSeparator).toBe(Config.defaultConfig.decimalSeparator)
    expect(config.getConfig().thousandSeparator).toBe(Config.defaultConfig.thousandSeparator)
    expect(config.getConfig().language).toBe(Config.defaultConfig.language)
    expect(config.getConfig().functionPlugins).toBe(Config.defaultConfig.functionPlugins)
    expect(config.getConfig().gpuMode).toBe('cpu')
    expect(config.getConfig().ignorePunctuation).toBe(Config.defaultConfig.ignorePunctuation)
    expect(config.getConfig().leapYear1900).toBe(Config.defaultConfig.leapYear1900)
    expect(config.getConfig().localeLang).toBe(Config.defaultConfig.localeLang)
    expect(config.getConfig().smartRounding).toBe(Config.defaultConfig.smartRounding)
    expect(config.getConfig().matrixDetection).toBe(Config.defaultConfig.matrixDetection)
    expect(config.getConfig().matrixDetectionThreshold).toBe(Config.defaultConfig.matrixDetectionThreshold)
    expect(config.getConfig().nullYear).toBe(Config.defaultConfig.nullYear)
    expect(config.getConfig().parseDate).toBe(Config.defaultConfig.parseDate)
    expect(config.getConfig().stringifyDate).toBe(Config.defaultConfig.stringifyDate)
    expect(config.getConfig().precisionEpsilon).toBe(Config.defaultConfig.precisionEpsilon)
    expect(config.getConfig().precisionRounding).toBe(Config.defaultConfig.precisionRounding)
    expect(config.getConfig().useColumnIndex).toBe(Config.defaultConfig.useColumnIndex)
    expect(config.getConfig().vlookupThreshold).toBe(Config.defaultConfig.vlookupThreshold)
    expect(config.getConfig().nullDate).toBe(Config.defaultConfig.nullDate)
    expect(config.getConfig().useStats).toBe(Config.defaultConfig.useStats)
  })

  it('has default settings and change of ignore punctuation is possible', () => {
    const config = new Config({ignorePunctuation: true})
    expect(config.getConfig().accentSensitive).toBe(Config.defaultConfig.accentSensitive)
    expect(config.getConfig().caseSensitive).toBe(Config.defaultConfig.caseSensitive)
    expect(config.getConfig().caseFirst).toBe(Config.defaultConfig.caseFirst)
    expect(config.getConfig().chooseAddressMappingPolicy).toBe(Config.defaultConfig.chooseAddressMappingPolicy)
    expect(config.getConfig().dateFormats).toBe(Config.defaultConfig.dateFormats)
    expect(config.getConfig().functionArgSeparator).toBe(Config.defaultConfig.functionArgSeparator)
    expect(config.getConfig().decimalSeparator).toBe(Config.defaultConfig.decimalSeparator)
    expect(config.getConfig().thousandSeparator).toBe(Config.defaultConfig.thousandSeparator)
    expect(config.getConfig().language).toBe(Config.defaultConfig.language)
    expect(config.getConfig().functionPlugins).toBe(Config.defaultConfig.functionPlugins)
    expect(config.getConfig().gpuMode).toBe(Config.defaultConfig.gpuMode)
    expect(config.getConfig().ignorePunctuation).toBe(true)
    expect(config.getConfig().leapYear1900).toBe(Config.defaultConfig.leapYear1900)
    expect(config.getConfig().localeLang).toBe(Config.defaultConfig.localeLang)
    expect(config.getConfig().smartRounding).toBe(Config.defaultConfig.smartRounding)
    expect(config.getConfig().matrixDetection).toBe(Config.defaultConfig.matrixDetection)
    expect(config.getConfig().matrixDetectionThreshold).toBe(Config.defaultConfig.matrixDetectionThreshold)
    expect(config.getConfig().nullYear).toBe(Config.defaultConfig.nullYear)
    expect(config.getConfig().parseDate).toBe(Config.defaultConfig.parseDate)
    expect(config.getConfig().stringifyDate).toBe(Config.defaultConfig.stringifyDate)
    expect(config.getConfig().precisionEpsilon).toBe(Config.defaultConfig.precisionEpsilon)
    expect(config.getConfig().precisionRounding).toBe(Config.defaultConfig.precisionRounding)
    expect(config.getConfig().useColumnIndex).toBe(Config.defaultConfig.useColumnIndex)
    expect(config.getConfig().vlookupThreshold).toBe(Config.defaultConfig.vlookupThreshold)
    expect(config.getConfig().nullDate).toBe(Config.defaultConfig.nullDate)
    expect(config.getConfig().useStats).toBe(Config.defaultConfig.useStats)
  })

  it('has default settings and change of the leapYear1900 is possible', () => {
    const config = new Config({leapYear1900: true})
    expect(config.getConfig().accentSensitive).toBe(Config.defaultConfig.accentSensitive)
    expect(config.getConfig().caseSensitive).toBe(Config.defaultConfig.caseSensitive)
    expect(config.getConfig().caseFirst).toBe(Config.defaultConfig.caseFirst)
    expect(config.getConfig().chooseAddressMappingPolicy).toBe(Config.defaultConfig.chooseAddressMappingPolicy)
    expect(config.getConfig().dateFormats).toBe(Config.defaultConfig.dateFormats)
    expect(config.getConfig().functionArgSeparator).toBe(Config.defaultConfig.functionArgSeparator)
    expect(config.getConfig().decimalSeparator).toBe(Config.defaultConfig.decimalSeparator)
    expect(config.getConfig().thousandSeparator).toBe(Config.defaultConfig.thousandSeparator)
    expect(config.getConfig().language).toBe(Config.defaultConfig.language)
    expect(config.getConfig().functionPlugins).toBe(Config.defaultConfig.functionPlugins)
    expect(config.getConfig().gpuMode).toBe(Config.defaultConfig.gpuMode)
    expect(config.getConfig().ignorePunctuation).toBe(Config.defaultConfig.ignorePunctuation)
    expect(config.getConfig().leapYear1900).toBe(true)
    expect(config.getConfig().localeLang).toBe(Config.defaultConfig.localeLang)
    expect(config.getConfig().smartRounding).toBe(Config.defaultConfig.smartRounding)
    expect(config.getConfig().matrixDetection).toBe(Config.defaultConfig.matrixDetection)
    expect(config.getConfig().matrixDetectionThreshold).toBe(Config.defaultConfig.matrixDetectionThreshold)
    expect(config.getConfig().nullYear).toBe(Config.defaultConfig.nullYear)
    expect(config.getConfig().parseDate).toBe(Config.defaultConfig.parseDate)
    expect(config.getConfig().stringifyDate).toBe(Config.defaultConfig.stringifyDate)
    expect(config.getConfig().precisionEpsilon).toBe(Config.defaultConfig.precisionEpsilon)
    expect(config.getConfig().precisionRounding).toBe(Config.defaultConfig.precisionRounding)
    expect(config.getConfig().useColumnIndex).toBe(Config.defaultConfig.useColumnIndex)
    expect(config.getConfig().vlookupThreshold).toBe(Config.defaultConfig.vlookupThreshold)
    expect(config.getConfig().nullDate).toBe(Config.defaultConfig.nullDate)
    expect(config.getConfig().useStats).toBe(Config.defaultConfig.useStats)
  })

 it('has default settings and the change of smart rounding is possible', () => {
    const config = new Config({smartRounding: false})
    expect(config.getConfig().accentSensitive).toBe(Config.defaultConfig.accentSensitive)
    expect(config.getConfig().caseSensitive).toBe(Config.defaultConfig.caseSensitive)
    expect(config.getConfig().caseFirst).toBe(Config.defaultConfig.caseFirst)
    expect(config.getConfig().chooseAddressMappingPolicy).toBe(Config.defaultConfig.chooseAddressMappingPolicy)
    expect(config.getConfig().dateFormats).toBe(Config.defaultConfig.dateFormats)
    expect(config.getConfig().functionArgSeparator).toBe(Config.defaultConfig.functionArgSeparator)
    expect(config.getConfig().decimalSeparator).toBe(Config.defaultConfig.decimalSeparator)
    expect(config.getConfig().thousandSeparator).toBe(Config.defaultConfig.thousandSeparator)
    expect(config.getConfig().language).toBe(Config.defaultConfig.language)
    expect(config.getConfig().functionPlugins).toBe(Config.defaultConfig.functionPlugins)
    expect(config.getConfig().gpuMode).toBe(Config.defaultConfig.gpuMode)
    expect(config.getConfig().ignorePunctuation).toBe(Config.defaultConfig.ignorePunctuation)
    expect(config.getConfig().leapYear1900).toBe(Config.defaultConfig.leapYear1900)
    expect(config.getConfig().localeLang).toBe(Config.defaultConfig.localeLang)
    expect(config.getConfig().smartRounding).toBe(false)
    expect(config.getConfig().matrixDetection).toBe(Config.defaultConfig.matrixDetection)
    expect(config.getConfig().matrixDetectionThreshold).toBe(Config.defaultConfig.matrixDetectionThreshold)
    expect(config.getConfig().nullYear).toBe(Config.defaultConfig.nullYear)
    expect(config.getConfig().parseDate).toBe(Config.defaultConfig.parseDate)
    expect(config.getConfig().stringifyDate).toBe(Config.defaultConfig.stringifyDate)
    expect(config.getConfig().precisionEpsilon).toBe(Config.defaultConfig.precisionEpsilon)
    expect(config.getConfig().precisionRounding).toBe(Config.defaultConfig.precisionRounding)
    expect(config.getConfig().useColumnIndex).toBe(Config.defaultConfig.useColumnIndex)
    expect(config.getConfig().vlookupThreshold).toBe(Config.defaultConfig.vlookupThreshold)
    expect(config.getConfig().nullDate).toBe(Config.defaultConfig.nullDate)
    expect(config.getConfig().useStats).toBe(Config.defaultConfig.useStats)
  })

  it('has default settings and the change of smart rounding is possible', () => {
    const config = new Config({matrixDetection: false})
    expect(config.getConfig().accentSensitive).toBe(Config.defaultConfig.accentSensitive)
    expect(config.getConfig().caseSensitive).toBe(Config.defaultConfig.caseSensitive)
    expect(config.getConfig().caseFirst).toBe(Config.defaultConfig.caseFirst)
    expect(config.getConfig().chooseAddressMappingPolicy).toBe(Config.defaultConfig.chooseAddressMappingPolicy)
    expect(config.getConfig().dateFormats).toBe(Config.defaultConfig.dateFormats)
    expect(config.getConfig().functionArgSeparator).toBe(Config.defaultConfig.functionArgSeparator)
    expect(config.getConfig().decimalSeparator).toBe(Config.defaultConfig.decimalSeparator)
    expect(config.getConfig().thousandSeparator).toBe(Config.defaultConfig.thousandSeparator)
    expect(config.getConfig().language).toBe(Config.defaultConfig.language)
    expect(config.getConfig().functionPlugins).toBe(Config.defaultConfig.functionPlugins)
    expect(config.getConfig().gpuMode).toBe(Config.defaultConfig.gpuMode)
    expect(config.getConfig().ignorePunctuation).toBe(Config.defaultConfig.ignorePunctuation)
    expect(config.getConfig().leapYear1900).toBe(Config.defaultConfig.leapYear1900)
    expect(config.getConfig().localeLang).toBe(Config.defaultConfig.localeLang)
    expect(config.getConfig().smartRounding).toBe(Config.defaultConfig.smartRounding)
    expect(config.getConfig().matrixDetection).toBe(false)
    expect(config.getConfig().matrixDetectionThreshold).toBe(Config.defaultConfig.matrixDetectionThreshold)
    expect(config.getConfig().nullYear).toBe(Config.defaultConfig.nullYear)
    expect(config.getConfig().parseDate).toBe(Config.defaultConfig.parseDate)
    expect(config.getConfig().stringifyDate).toBe(Config.defaultConfig.stringifyDate)
    expect(config.getConfig().precisionEpsilon).toBe(Config.defaultConfig.precisionEpsilon)
    expect(config.getConfig().precisionRounding).toBe(Config.defaultConfig.precisionRounding)
    expect(config.getConfig().useColumnIndex).toBe(Config.defaultConfig.useColumnIndex)
    expect(config.getConfig().vlookupThreshold).toBe(Config.defaultConfig.vlookupThreshold)
    expect(config.getConfig().nullDate).toBe(Config.defaultConfig.nullDate)
    expect(config.getConfig().useStats).toBe(Config.defaultConfig.useStats)
  })

  it('has default settings and the change of null year is possible', () => {
    const config = new Config({nullYear: 20})
    expect(config.getConfig().accentSensitive).toBe(Config.defaultConfig.accentSensitive)
    expect(config.getConfig().caseSensitive).toBe(Config.defaultConfig.caseSensitive)
    expect(config.getConfig().caseFirst).toBe(Config.defaultConfig.caseFirst)
    expect(config.getConfig().chooseAddressMappingPolicy).toBe(Config.defaultConfig.chooseAddressMappingPolicy)
    expect(config.getConfig().dateFormats).toBe(Config.defaultConfig.dateFormats)
    expect(config.getConfig().functionArgSeparator).toBe(Config.defaultConfig.functionArgSeparator)
    expect(config.getConfig().decimalSeparator).toBe(Config.defaultConfig.decimalSeparator)
    expect(config.getConfig().thousandSeparator).toBe(Config.defaultConfig.thousandSeparator)
    expect(config.getConfig().language).toBe(Config.defaultConfig.language)
    expect(config.getConfig().functionPlugins).toBe(Config.defaultConfig.functionPlugins)
    expect(config.getConfig().gpuMode).toBe(Config.defaultConfig.gpuMode)
    expect(config.getConfig().ignorePunctuation).toBe(Config.defaultConfig.ignorePunctuation)
    expect(config.getConfig().leapYear1900).toBe(Config.defaultConfig.leapYear1900)
    expect(config.getConfig().localeLang).toBe(Config.defaultConfig.localeLang)
    expect(config.getConfig().smartRounding).toBe(Config.defaultConfig.smartRounding)
    expect(config.getConfig().matrixDetection).toBe(Config.defaultConfig.matrixDetection)
    expect(config.getConfig().matrixDetectionThreshold).toBe(Config.defaultConfig.matrixDetectionThreshold)
    expect(config.getConfig().nullYear).toBe(20)
    expect(config.getConfig().parseDate).toBe(Config.defaultConfig.parseDate)
    expect(config.getConfig().stringifyDate).toBe(Config.defaultConfig.stringifyDate)
    expect(config.getConfig().precisionEpsilon).toBe(Config.defaultConfig.precisionEpsilon)
    expect(config.getConfig().precisionRounding).toBe(Config.defaultConfig.precisionRounding)
    expect(config.getConfig().useColumnIndex).toBe(Config.defaultConfig.useColumnIndex)
    expect(config.getConfig().vlookupThreshold).toBe(Config.defaultConfig.vlookupThreshold)
    expect(config.getConfig().nullDate).toBe(Config.defaultConfig.nullDate)
    expect(config.getConfig().useStats).toBe(Config.defaultConfig.useStats)
  })

  it('has default settings and the change of parse date is possible', () => {
    function customParseDate(dateString: string, dateFormat: string): Maybe<SimpleDate> {
    const momentDate = moment(dateString, dateFormat, true)
      if(momentDate.isValid()){
        return {year: momentDate.year(), month: momentDate.month()+1, day: momentDate.date()}
      }
        return undefined
      }
    const config = new Config({parseDate: customParseDate, dateFormats: ['Do MMM YY', 'DDD YYYY']})
    const dateHelper = new DateHelper(config)
    expect(config.getConfig().accentSensitive).toBe(Config.defaultConfig.accentSensitive)
    expect(config.getConfig().caseSensitive).toBe(Config.defaultConfig.caseSensitive)
    expect(config.getConfig().caseFirst).toBe(Config.defaultConfig.caseFirst)
    expect(config.getConfig().chooseAddressMappingPolicy).toBe(Config.defaultConfig.chooseAddressMappingPolicy)
    expect(config.getConfig().functionArgSeparator).toBe(Config.defaultConfig.functionArgSeparator)
    expect(config.getConfig().decimalSeparator).toBe(Config.defaultConfig.decimalSeparator)
    expect(config.getConfig().thousandSeparator).toBe(Config.defaultConfig.thousandSeparator)
    expect(config.getConfig().language).toBe(Config.defaultConfig.language)
    expect(config.getConfig().functionPlugins).toBe(Config.defaultConfig.functionPlugins)
    expect(config.getConfig().gpuMode).toBe(Config.defaultConfig.gpuMode)
    expect(config.getConfig().ignorePunctuation).toBe(Config.defaultConfig.ignorePunctuation)
    expect(config.getConfig().leapYear1900).toBe(Config.defaultConfig.leapYear1900)
    expect(config.getConfig().localeLang).toBe(Config.defaultConfig.localeLang)
    expect(config.getConfig().smartRounding).toBe(Config.defaultConfig.smartRounding)
    expect(config.getConfig().matrixDetection).toBe(Config.defaultConfig.matrixDetection)
    expect(config.getConfig().matrixDetectionThreshold).toBe(Config.defaultConfig.matrixDetectionThreshold)
    expect(config.getConfig().nullYear).toBe(Config.defaultConfig.nullYear)
    expect(config.getConfig().stringifyDate).toBe(Config.defaultConfig.stringifyDate)
    expect(config.getConfig().precisionEpsilon).toBe(Config.defaultConfig.precisionEpsilon)
    expect(config.getConfig().precisionRounding).toBe(Config.defaultConfig.precisionRounding)
    expect(config.getConfig().useColumnIndex).toBe(Config.defaultConfig.useColumnIndex)
    expect(config.getConfig().vlookupThreshold).toBe(Config.defaultConfig.vlookupThreshold)
    expect(config.getConfig().nullDate).toBe(Config.defaultConfig.nullDate)
    expect(config.getConfig().useStats).toBe(Config.defaultConfig.useStats)
    expect(dateHelper.dateStringToDateNumber('31st Jan 00')).toBe(36556)
    expect(dateHelper.dateStringToDateNumber('365 1900')).toBe(366)
  })
            
  it('has default settings and the change of precision epsilon is possible', () => {
    const config = new Config({precisionEpsilon: 1e-15})
    expect(config.getConfig().accentSensitive).toBe(Config.defaultConfig.accentSensitive)
    expect(config.getConfig().caseSensitive).toBe(Config.defaultConfig.caseSensitive)
    expect(config.getConfig().caseFirst).toBe(Config.defaultConfig.caseFirst)
    expect(config.getConfig().chooseAddressMappingPolicy).toBe(Config.defaultConfig.chooseAddressMappingPolicy)
    expect(config.getConfig().dateFormats).toBe(Config.defaultConfig.dateFormats)
    expect(config.getConfig().functionArgSeparator).toBe(Config.defaultConfig.functionArgSeparator)
    expect(config.getConfig().decimalSeparator).toBe(Config.defaultConfig.decimalSeparator)
    expect(config.getConfig().thousandSeparator).toBe(Config.defaultConfig.thousandSeparator)
    expect(config.getConfig().language).toBe(Config.defaultConfig.language)
    expect(config.getConfig().functionPlugins).toBe(Config.defaultConfig.functionPlugins)
    expect(config.getConfig().gpuMode).toBe(Config.defaultConfig.gpuMode)
    expect(config.getConfig().ignorePunctuation).toBe(Config.defaultConfig.ignorePunctuation)
    expect(config.getConfig().leapYear1900).toBe(Config.defaultConfig.leapYear1900)
    expect(config.getConfig().localeLang).toBe(Config.defaultConfig.localeLang)
    expect(config.getConfig().smartRounding).toBe(Config.defaultConfig.smartRounding)
    expect(config.getConfig().matrixDetection).toBe(Config.defaultConfig.matrixDetection)
    expect(config.getConfig().matrixDetectionThreshold).toBe(Config.defaultConfig.matrixDetectionThreshold)
    expect(config.getConfig().nullYear).toBe(Config.defaultConfig.nullYear)
    expect(config.getConfig().parseDate).toBe(Config.defaultConfig.parseDate)
    expect(config.getConfig().stringifyDate).toBe(Config.defaultConfig.stringifyDate)
    expect(config.getConfig().precisionEpsilon).toBe(1e-15)
    expect(config.getConfig().precisionRounding).toBe(Config.defaultConfig.precisionRounding)
    expect(config.getConfig().useColumnIndex).toBe(Config.defaultConfig.useColumnIndex)
    expect(config.getConfig().vlookupThreshold).toBe(Config.defaultConfig.vlookupThreshold)
    expect(config.getConfig().nullDate).toBe(Config.defaultConfig.nullDate)
    expect(config.getConfig().useStats).toBe(Config.defaultConfig.useStats)
  })

  it('has default settings and the change of precisionRounding is possible', () => {
    const config = new Config({precisionRounding: 1})
    expect(config.getConfig().accentSensitive).toBe(Config.defaultConfig.accentSensitive)
    expect(config.getConfig().caseSensitive).toBe(Config.defaultConfig.caseSensitive)
    expect(config.getConfig().caseFirst).toBe(Config.defaultConfig.caseFirst)
    expect(config.getConfig().chooseAddressMappingPolicy).toBe(Config.defaultConfig.chooseAddressMappingPolicy)
    expect(config.getConfig().dateFormats).toBe(Config.defaultConfig.dateFormats)
    expect(config.getConfig().functionArgSeparator).toBe(Config.defaultConfig.functionArgSeparator)
    expect(config.getConfig().decimalSeparator).toBe(Config.defaultConfig.decimalSeparator)
    expect(config.getConfig().thousandSeparator).toBe(Config.defaultConfig.thousandSeparator)
    expect(config.getConfig().language).toBe(Config.defaultConfig.language)
    expect(config.getConfig().functionPlugins).toBe(Config.defaultConfig.functionPlugins)
    expect(config.getConfig().gpuMode).toBe(Config.defaultConfig.gpuMode)
    expect(config.getConfig().ignorePunctuation).toBe(Config.defaultConfig.ignorePunctuation)
    expect(config.getConfig().leapYear1900).toBe(Config.defaultConfig.leapYear1900)
    expect(config.getConfig().localeLang).toBe(Config.defaultConfig.localeLang)
    expect(config.getConfig().smartRounding).toBe(Config.defaultConfig.smartRounding)
    expect(config.getConfig().matrixDetection).toBe(Config.defaultConfig.matrixDetection)
    expect(config.getConfig().matrixDetectionThreshold).toBe(Config.defaultConfig.matrixDetectionThreshold)
    expect(config.getConfig().nullYear).toBe(Config.defaultConfig.nullYear)
    expect(config.getConfig().parseDate).toBe(Config.defaultConfig.parseDate)
    expect(config.getConfig().stringifyDate).toBe(Config.defaultConfig.stringifyDate)
    expect(config.getConfig().precisionEpsilon).toBe(Config.defaultConfig.precisionEpsilon)
    expect(config.getConfig().precisionRounding).toBe(1)
    expect(config.getConfig().useColumnIndex).toBe(Config.defaultConfig.useColumnIndex)
    expect(config.getConfig().vlookupThreshold).toBe(Config.defaultConfig.vlookupThreshold)
    expect(config.getConfig().nullDate).toBe(Config.defaultConfig.nullDate)
    expect(config.getConfig().useStats).toBe(Config.defaultConfig.useStats)
  })

  it('has default settings and the change of useColumnIndex is possible', () => {
    const config = new Config({useColumnIndex: true})
    expect(config.getConfig().accentSensitive).toBe(Config.defaultConfig.accentSensitive)
    expect(config.getConfig().caseSensitive).toBe(Config.defaultConfig.caseSensitive)
    expect(config.getConfig().caseFirst).toBe(Config.defaultConfig.caseFirst)
    expect(config.getConfig().chooseAddressMappingPolicy).toBe(Config.defaultConfig.chooseAddressMappingPolicy)
    expect(config.getConfig().dateFormats).toBe(Config.defaultConfig.dateFormats)
    expect(config.getConfig().functionArgSeparator).toBe(Config.defaultConfig.functionArgSeparator)
    expect(config.getConfig().decimalSeparator).toBe(Config.defaultConfig.decimalSeparator)
    expect(config.getConfig().thousandSeparator).toBe(Config.defaultConfig.thousandSeparator)
    expect(config.getConfig().language).toBe(Config.defaultConfig.language)
    expect(config.getConfig().functionPlugins).toBe(Config.defaultConfig.functionPlugins)
    expect(config.getConfig().gpuMode).toBe(Config.defaultConfig.gpuMode)
    expect(config.getConfig().ignorePunctuation).toBe(Config.defaultConfig.ignorePunctuation)
    expect(config.getConfig().leapYear1900).toBe(Config.defaultConfig.leapYear1900)
    expect(config.getConfig().localeLang).toBe(Config.defaultConfig.localeLang)
    expect(config.getConfig().smartRounding).toBe(Config.defaultConfig.smartRounding)
    expect(config.getConfig().matrixDetection).toBe(Config.defaultConfig.matrixDetection)
    expect(config.getConfig().matrixDetectionThreshold).toBe(Config.defaultConfig.matrixDetectionThreshold)
    expect(config.getConfig().nullYear).toBe(Config.defaultConfig.nullYear)
    expect(config.getConfig().parseDate).toBe(Config.defaultConfig.parseDate)
    expect(config.getConfig().stringifyDate).toBe(Config.defaultConfig.stringifyDate)
    expect(config.getConfig().precisionEpsilon).toBe(Config.defaultConfig.precisionEpsilon)
    expect(config.getConfig().precisionRounding).toBe(Config.defaultConfig.precisionRounding)
    expect(config.getConfig().useColumnIndex).toBe(true)
    expect(config.getConfig().vlookupThreshold).toBe(Config.defaultConfig.vlookupThreshold)
    expect(config.getConfig().nullDate).toBe(Config.defaultConfig.nullDate)
    expect(config.getConfig().useStats).toBe(Config.defaultConfig.useStats)
  })

  it('has default settings and the change of vlookupThreshold is possible', () => {
    const config = new Config({vlookupThreshold: 30})
    expect(config.getConfig().accentSensitive).toBe(Config.defaultConfig.accentSensitive)
    expect(config.getConfig().caseSensitive).toBe(Config.defaultConfig.caseSensitive)
    expect(config.getConfig().caseFirst).toBe(Config.defaultConfig.caseFirst)
    expect(config.getConfig().chooseAddressMappingPolicy).toBe(Config.defaultConfig.chooseAddressMappingPolicy)
    expect(config.getConfig().dateFormats).toBe(Config.defaultConfig.dateFormats)
    expect(config.getConfig().functionArgSeparator).toBe(Config.defaultConfig.functionArgSeparator)
    expect(config.getConfig().decimalSeparator).toBe(Config.defaultConfig.decimalSeparator)
    expect(config.getConfig().thousandSeparator).toBe(Config.defaultConfig.thousandSeparator)
    expect(config.getConfig().language).toBe(Config.defaultConfig.language)
    expect(config.getConfig().functionPlugins).toBe(Config.defaultConfig.functionPlugins)
    expect(config.getConfig().gpuMode).toBe(Config.defaultConfig.gpuMode)
    expect(config.getConfig().ignorePunctuation).toBe(Config.defaultConfig.ignorePunctuation)
    expect(config.getConfig().leapYear1900).toBe(Config.defaultConfig.leapYear1900)
    expect(config.getConfig().localeLang).toBe(Config.defaultConfig.localeLang)
    expect(config.getConfig().smartRounding).toBe(Config.defaultConfig.smartRounding)
    expect(config.getConfig().matrixDetection).toBe(Config.defaultConfig.matrixDetection)
    expect(config.getConfig().matrixDetectionThreshold).toBe(Config.defaultConfig.matrixDetectionThreshold)
    expect(config.getConfig().nullYear).toBe(Config.defaultConfig.nullYear)
    expect(config.getConfig().parseDate).toBe(Config.defaultConfig.parseDate)
    expect(config.getConfig().stringifyDate).toBe(Config.defaultConfig.stringifyDate)
    expect(config.getConfig().precisionEpsilon).toBe(Config.defaultConfig.precisionEpsilon)
    expect(config.getConfig().precisionRounding).toBe(Config.defaultConfig.precisionRounding)
    expect(config.getConfig().useColumnIndex).toBe(Config.defaultConfig.useColumnIndex)
    expect(config.getConfig().vlookupThreshold).toBe(30)
    expect(config.getConfig().nullDate).toBe(Config.defaultConfig.nullDate)
    expect(config.getConfig().useStats).toBe(Config.defaultConfig.useStats)
  })

  xit('has default settings and the change of nullDate is possible', () => {
    const config = new Config({nullDate: {year: 2000, month: 1, day: 1}})
    expect(config.getConfig().accentSensitive).toBe(Config.defaultConfig.accentSensitive)
    expect(config.getConfig().caseSensitive).toBe(Config.defaultConfig.caseSensitive)
    expect(config.getConfig().caseFirst).toBe(Config.defaultConfig.caseFirst)
    expect(config.getConfig().chooseAddressMappingPolicy).toBe(Config.defaultConfig.chooseAddressMappingPolicy)
    expect(config.getConfig().dateFormats).toBe(Config.defaultConfig.dateFormats)
    expect(config.getConfig().functionArgSeparator).toBe(Config.defaultConfig.functionArgSeparator)
    expect(config.getConfig().decimalSeparator).toBe(Config.defaultConfig.decimalSeparator)
    expect(config.getConfig().thousandSeparator).toBe(Config.defaultConfig.thousandSeparator)
    expect(config.getConfig().language).toBe(Config.defaultConfig.language)
    expect(config.getConfig().functionPlugins).toBe(Config.defaultConfig.functionPlugins)
    expect(config.getConfig().gpuMode).toBe(Config.defaultConfig.gpuMode)
    expect(config.getConfig().ignorePunctuation).toBe(Config.defaultConfig.ignorePunctuation)
    expect(config.getConfig().leapYear1900).toBe(Config.defaultConfig.leapYear1900)
    expect(config.getConfig().localeLang).toBe(Config.defaultConfig.localeLang)
    expect(config.getConfig().smartRounding).toBe(Config.defaultConfig.smartRounding)
    expect(config.getConfig().matrixDetection).toBe(Config.defaultConfig.matrixDetection)
    expect(config.getConfig().matrixDetectionThreshold).toBe(Config.defaultConfig.matrixDetectionThreshold)
    expect(config.getConfig().nullYear).toBe(Config.defaultConfig.nullYear)
    expect(config.getConfig().parseDate).toBe(Config.defaultConfig.parseDate)
    expect(config.getConfig().stringifyDate).toBe(Config.defaultConfig.stringifyDate)
    expect(config.getConfig().precisionEpsilon).toBe(Config.defaultConfig.precisionEpsilon)
    expect(config.getConfig().precisionRounding).toBe(Config.defaultConfig.precisionRounding)
    expect(config.getConfig().useColumnIndex).toBe(Config.defaultConfig.useColumnIndex)
    expect(config.getConfig().vlookupThreshold).toBe(Config.defaultConfig.vlookupThreshold)
    //expect(config.getConfig().nullDate).toBe({year: 2000, month: 1, day: 1})
    expect(config.getConfig().useStats).toBe(Config.defaultConfig.useStats)
  })

  it('has default settings and the change of useStats is possible', () => {
    const config = new Config({useStats: true})
    expect(config.getConfig().accentSensitive).toBe(Config.defaultConfig.accentSensitive)
    expect(config.getConfig().caseSensitive).toBe(Config.defaultConfig.caseSensitive)
    expect(config.getConfig().caseFirst).toBe(Config.defaultConfig.caseFirst)
    expect(config.getConfig().chooseAddressMappingPolicy).toBe(Config.defaultConfig.chooseAddressMappingPolicy)
    expect(config.getConfig().dateFormats).toBe(Config.defaultConfig.dateFormats)
    expect(config.getConfig().functionArgSeparator).toBe(Config.defaultConfig.functionArgSeparator)
    expect(config.getConfig().decimalSeparator).toBe(Config.defaultConfig.decimalSeparator)
    expect(config.getConfig().thousandSeparator).toBe(Config.defaultConfig.thousandSeparator)
    expect(config.getConfig().language).toBe(Config.defaultConfig.language)
    expect(config.getConfig().functionPlugins).toBe(Config.defaultConfig.functionPlugins)
    expect(config.getConfig().gpuMode).toBe(Config.defaultConfig.gpuMode)
    expect(config.getConfig().ignorePunctuation).toBe(Config.defaultConfig.ignorePunctuation)
    expect(config.getConfig().leapYear1900).toBe(Config.defaultConfig.leapYear1900)
    expect(config.getConfig().localeLang).toBe(Config.defaultConfig.localeLang)
    expect(config.getConfig().smartRounding).toBe(Config.defaultConfig.smartRounding)
    expect(config.getConfig().matrixDetection).toBe(Config.defaultConfig.matrixDetection)
    expect(config.getConfig().matrixDetectionThreshold).toBe(Config.defaultConfig.matrixDetectionThreshold)
    expect(config.getConfig().nullYear).toBe(Config.defaultConfig.nullYear)
    expect(config.getConfig().parseDate).toBe(Config.defaultConfig.parseDate)
    expect(config.getConfig().stringifyDate).toBe(Config.defaultConfig.stringifyDate)
    expect(config.getConfig().precisionEpsilon).toBe(Config.defaultConfig.precisionEpsilon)
    expect(config.getConfig().precisionRounding).toBe(Config.defaultConfig.precisionRounding)
    expect(config.getConfig().useColumnIndex).toBe(Config.defaultConfig.useColumnIndex)
    expect(config.getConfig().vlookupThreshold).toBe(Config.defaultConfig.vlookupThreshold)
    expect(config.getConfig().nullDate).toBe(Config.defaultConfig.nullDate)
    expect(config.getConfig().useStats).toBe(true)
  })
      

})